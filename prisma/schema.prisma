generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}

enum PetMood {
  HAPPY
  SAD
  CALM
  NERVOUS
  ANGRY
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  password_hash String
  role          Role      @default(MEMBER)
  created_at    DateTime  @default(now())
  updated_at  DateTime    @updatedAt

  orgs          Org[]

  @@map("users")
}

model Pet {
  id            String   @id @default(uuid())
  name          String
  city          String
  breed         String
  height        Float
  mood          PetMood     @default(HAPPY)
  birth_date    DateTime
  color         String
  weight        Float
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  addressId     String?
  orgId     String?

  address       Address? @relation(fields: [addressId], references: [id])
  org           Org?     @relation(fields: [orgId], references: [id])

  @@map("pets")
}

model Address {
  id          String   @id @default(uuid())
  street      String
  number      String
  complement  String?
  city        String
  state       String
  zipcode     String
  country     String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  pets          Pet[]
  orgs          Org[]

  @@map("addresses")
}

model Org {
  id          String   @id @default(uuid())
  phone       String?
  created_at  DateTime  @default(now())
  updated_at  DateTime @updatedAt
  userId      String
  addressId   String?

  user        User     @relation(fields: [userId], references: [id])
  address     Address? @relation(fields: [addressId], references: [id])
  pets        Pet[]

  @@map("orgs")
}